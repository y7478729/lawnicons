name: Build release APK

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  build-release-apk:
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
        with:
          submodules: true
      - uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: 21
      - uses: gradle/actions/setup-gradle@v3
        with:
          cache-encryption-key: Da25KUVSE5jbGds2zXmfXw==
          gradle-home-cache-cleanup: true
      - name: Extract version from build.gradle.kts
        id: extract_version
        run: echo "::set-output name=version::$(grep -oP '(?<=version ).*(?=\")' build.gradle.kts)"
      - name: Write sign info
        if: github.repository_owner == 'LawnchairLauncher'
        run: |
          if [ ! -z "${{ secrets.KEYSTORE }}" ]; then
            echo storePassword='${{ secrets.KEYSTORE_PASSWORD }}' >> keystore.properties
            echo keyAlias='${{ secrets.KEY_ALIAS }}' >> keystore.properties
            echo keyPassword='${{ secrets.KEY_PASSWORD }}' >> keystore.properties
            echo storeFile='${{ github.workspace }}/key.jks' >> keystore.properties
            echo ${{ secrets.KEYSTORE }} | base64 --decode > ${{ github.workspace }}/key.jks
          fi
      - name: Build release APK
        run: ./gradlew app:assembleRelease
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: Release APK
          path: app/build/outputs/apk/app/release/*.apk

  send-notifications:
    runs-on: ubuntu-latest
    needs: build-release-apk
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
        with:
          submodules: true
          fetch-depth: 0
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'
      - name: Install Python packages
        run: |
          python -m pip install --upgrade pip
          pip install gitpython requests
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: Release APK
          path: artifacts/release-apk
      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.extract_version.outputs.version }}  # 使用提取的版本号作为发布的标签
          release_name: Release ${{ steps.extract_version.outputs.version }}  # 发布的名称
          body: Release description goes here  # 发布的描述
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: artifacts/release-apk/*.apk
          asset_name: Release-${{ steps.extract_version.outputs.version }}.apk
          asset_content_type: application/vnd.android.package-archive
