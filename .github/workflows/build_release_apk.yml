name: Auto-deploy and release APK on version change

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'

      - name: Extract version from build.gradle.kts
        id: extract_version
        run: echo "::set-output name=version::$(grep -oP 'version = \"\K[^\"]+' app/build.gradle.kts)"

      - name: Build release APK
        run: ./gradlew app:assembleRelease

      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.extract_version.outputs.version }}
          release_name: Release ${{ steps.extract_version.outputs.version }}
          body: |
            Add release notes here. You can extract them from a file or generate dynamically.
          draft: false
          prerelease: false

      - name: Upload APK to release
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: app/build/outputs/apk/app/release/*.apk
          asset_name: app-release.apk
          asset_content_type: application/vnd.android.package-archive

      - name: Update release description with changelog
        if: always()
        run: |
          # Extract changelog from a file or generate dynamically
          # Example: CHANGELOG.md
          # changelog=$(cat CHANGELOG.md)
          changelog="Add your changelog here"

          # Get the release ID from the output of create_release step
          release_id=$(echo "${{ steps.create_release.outputs.release_id }}")

          # Update release description with changelog
          curl -X PATCH \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/repos/${{ github.repository }}/releases/${release_id}" \
            -d "{\"body\": \"$changelog\"}"
